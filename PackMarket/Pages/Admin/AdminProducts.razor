@page "/admin/products"
@using System.Globalization;
<PageTitle>Товары</PageTitle>
<DataGrid TItem="Product" Data="@Products" @bind-SelectedRow="@selectedProduct"
          SelectionMode="DataGridSelectionMode.Single"
          SortMode="DataGridSortMode.Single"
          PageSize="10"
          ShowPager="true"
          Responsive="true"
          Filterable="true"
          Resizable="true"
          Hoverable="true"
          ResizeMode="TableResizeMode.Columns"
          Editable="true"
          EditMode="DataGridEditMode.Popup"
          NewItemDefaultSetter="@OnNewItemDefaultSetter"
          CommandMode="DataGridCommandMode.ButtonRow">
    <DataGridColumns>
        <DataGridCommandColumn NewCommandAllowed="false" EditCommandAllowed="false" DeleteCommandAllowed="false">
            <SaveCommandTemplate>
                <Button ElementId="btnSave" Type="ButtonType.Submit" PreventDefaultOnSubmit Color="Color.Primary" @onclick="@(async ()=>{await context.Clicked.InvokeAsync(); await OnRowInserted(context.Item,catid);})">@context.LocalizationString</Button>
            </SaveCommandTemplate>
            <CancelCommandTemplate>
                <Button ElementId="btnCancel" Color="Color.Secondary" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </CancelCommandTemplate>
        </DataGridCommandColumn>
        <DataGridColumn Field="@nameof(Product.Name)" Caption="Название" Editable />
        <DataGridSelectColumn Field="@nameof(Product.CategoryId)" Editable Caption="Категория">
            <DisplayTemplate>
                @{
                    Category cat = Categories.FirstOrDefault(x => x.Id == context.CategoryId);
                }
                @if (cat != null)
                {
                    @cat.Title.ToString();
                }
                else
                {
                    @String.Empty;
                }
            </DisplayTemplate>
            <EditTemplate>
                <Select TValue="int" @bind-SelectedValue="@catid">
                    @if(context.Item?.CategoryId==null)
                    {
                        <SelectItem TValue="int" Value="tempcat.Id">@tempcat.Title</SelectItem>
                        @foreach (var item in Categories.Where(x => tempcat.Id != x.Id))
                        {
                            <SelectItem Value="item.Id">@item.Title</SelectItem>
                        }
                    }
                    else
                    {
                        <SelectItem TValue="int" Value="context.Item.CategoryId">@context.Item.Category.Title</SelectItem>
                        @foreach (var item in Categories.Where(x => context.Item.CategoryId != x.Id))
                        {
                            <SelectItem Value="item.Id">@item.Title</SelectItem>
                        }
                    }
                </Select>
            </EditTemplate>
        </DataGridSelectColumn>
        <DataGridDateColumn Field="@nameof(Product.CreatedAt)" Caption="Дата создания" DisplayFormatProvider="@CultureInfo.GetCultureInfo("ru-RU")">
        </DataGridDateColumn>
        <DataGridDateColumn Field="@nameof(Product.ChangedAt)" Caption="Дата изменения" DisplayFormatProvider="@CultureInfo.GetCultureInfo("ru-RU")">
        </DataGridDateColumn>
    </DataGridColumns>
    <ButtonRowTemplate>
        <Button Color="Color.Success" Clicked="context.NewCommand.Clicked">Создать</Button>
        <Button Color="Color.Primary" Disabled="(selectedProduct is null)" Clicked="context.EditCommand.Clicked">Изменить</Button>
        <Button Color="Color.Danger" Disabled="(selectedProduct is null)" Clicked="@(async ()=>{await context.DeleteCommand.Clicked.InvokeAsync(); await OnRowRemoved(context.DeleteCommand.Item.Id);})">Удалить</Button>
        <Button Color="Color.Link" Clicked="context.ClearFilterCommand.Clicked">Очистить фильтр</Button>
    </ButtonRowTemplate>
</DataGrid>
@code {
    Category tempcat;
    int catid;
    Task OnSelectedValueChanged(int value)
    {
        catid = value;
        return Task.CompletedTask;
    }
}